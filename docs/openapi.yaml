openapi: 3.0.3
info:
  title: NVA Doi Registrar API
  version: 1.0.0
x-amazon-apigateway-request-validators:
  validate_parameters:
    validateRequestBody: false
    validateRequestParameters: true
  validate_body:
    validateRequestBody: true
    validateRequestParameters: false
paths:
  /draft:
    post:
      summary: Reserve Doi
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReserveDoiRequest'
      security:
        - CognitoUserPool: [ 'https://api.nva.unit.no/scopes/backend', 'aws.cognito.signin.user.admin' ]
      x-amazon-apigateway-request-validator: validate_body
      x-amazon-apigateway-integration:
        uri:
          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${DataCiteReserveDraftDoiHandlerFunction.Arn}/invocations
        responses: { }
        httpMethod: POST
        type: AWS_PROXY
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Doi'
        '502':
          description: Bad Gateway
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
  /draft/{doiPrefix}/{doiSuffix}:
    delete:
      summary: Delete Draft Doi
      parameters:
        - in: path
          name: doiPrefix
          schema:
            type: string
          required: true
          description: Doi prefix of type 10.12345
        - in: path
          name: doiSuffix
          schema:
            type: string
          required: true
          description: Doi suffix of type abcd-1234
        - in: query
          name: customerId
          schema:
            type: string
          required: true
          description: CustomerId of NVA customer with DataCite config
      security:
        - CognitoUserPool: [ 'https://api.nva.unit.no/scopes/backend', 'aws.cognito.signin.user.admin' ]
      x-amazon-apigateway-request-validator: validate_parameters
      x-amazon-apigateway-integration:
        uri:
          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${DataCiteDeleteDraftDoiHandler.Arn}/invocations
        responses: { }
        httpMethod: POST
        type: AWS_PROXY
      responses:
        '202':
          description: Doi was deleted successfully
        '405':
          description: Not allowed to delete findable doi
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
        '502':
          description: Problems fetching or deleting doi, bad response from DataCite
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'

  /findable:
    post:
      summary: Make Doi findable
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDoiRequest'
      security:
        - CognitoUserPool: [ 'https://api.nva.unit.no/scopes/backend', 'aws.cognito.signin.user.admin' ]
      x-amazon-apigateway-request-validator: validate_body
      x-amazon-apigateway-integration:
        uri:
          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${DataCiteFindableDoiHandler.Arn}/invocations
        responses: { }
        httpMethod: POST
        type: AWS_PROXY
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Doi'
        '502':
          description: Bad Gateway
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'

components:
  schemas:
    ReserveDoiRequest:
      type: object
      properties:
        customer:
          type: string
      required:
        - customer
    UpdateDoiRequest:
      type: object
      properties:
        doi:
          type: string
        customerId:
          type: string
        publicationId:
          type: string
      required:
        - customerId
        - publicationId
    Doi:
      type: object
      properties:
        doi:
          type: string
    Problem:
      type: object
      description: NVA error reporting object
      required:
        - title
        - detail
        - status
      properties:
        title:
          type: string
          description: Human-readable description of the error status
        detail:
          type: string
          description: A more detailed error message describing the error and potential mitigations
        status:
          type: integer
          description: The HTTP status code associated with the problem
        requestId:
          type: string
          description: Identifier of the request causing the problem
        instance:
          type: string
          description: The requested path associated with the error
        type:
          type: string
          description: A URI describing the error and mitigations, in generic cases, this is about:blank
  securitySchemes:
    CognitoUserPool:
      type: apiKey
      name: Authorization
      in: header
      x-amazon-apigateway-authtype: cognito_user_pools
      x-amazon-apigateway-authorizer:
        type: cognito_user_pools
        providerARNs:
          - Ref:
              CognitoAuthorizerArn
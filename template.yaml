AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  AWS

  Sample SAM Template for AWS

Parameters:
  CognitoAuthorizerArn:
    Type: 'AWS::SSM::Parameter::Value<String>'
    Description: Reference to Cognito UserPool for the stage
    Default: CognitoAuthorizerArn
  CustomDomainBasePath:
    Type: String
    Description: Base path mapping in CustomDomain
    Default: doi-registrar
  DataCiteMdsHost:
    Type: 'AWS::SSM::Parameter::Value<String>'
    Default: dataCiteMdsHost
  DataCiteRestHost:
    Type: 'AWS::SSM::Parameter::Value<String>'
    Default: dataCiteRestHost
  EventBusName:
    Type: 'AWS::SSM::Parameter::Value<String>'
    Default: '/NVA/Events/EventsBusName'
  EventBusArn:
    Type: 'AWS::SSM::Parameter::Value<String>'
    Default: '/NVA/Events/EventsBusArn'
  ApiDomain:
    Type: 'AWS::SSM::Parameter::Value<String>'
    Default: '/NVA/ApiDomain'
  CustomerSecretsSecretName:
    Type: String
    Default: dataCiteCustomerSecrets
  CustomerSecretsSecretKey:
    Type: String
    Default: dataCiteCustomerSecrets
  DoiHost:
    Type: String
  Suffix:
    Type: String
    Default: ''
    Description: Suffix used for naming resources for feature branches to avoid conflicts.
  SlackSnsArn:
    Type: AWS::SSM::Parameter::Value<String>
    Default: '/NVA/Monitoring/SlackSnsArn'
  AllowedOrigins:
    Type: String
    Description: comma separated list of external clients that are allowed to contact the HTTP APIs, "*" indicates that all origins are allowed
    Default: '*'

Conditions:
  WithSuffix: !Not [ !Equals [ !Ref Suffix, '' ] ]

Globals:
  Function:
    Timeout: 60
    Runtime: java21
    MemorySize: 1408
    Environment:
      Variables:
        API_HOST: !Ref ApiDomain


Resources:

  ApiAccessLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      RetentionInDays: 90

  LambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Path: /
      Policies:
        - PolicyName: LambdaDefaults
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: "*"
        - PolicyName: InvokeLambda
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - lambda:InvokeFunction
                #Allow all resources to avoid circular dependencies.
                Resource: '*'
        - PolicyName: SqsEvents
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - sqs:SendMessage
                  - sqs:DeleteMessage
                Resource:
                  - !GetAtt DataCiteDraftDoiHandlerDLQ.Arn
                  - !GetAtt DataCiteFindableDoiHandlerDLQ.Arn
                  - !GetAtt DataCiteDeleteDraftDoiHandlerDLQ.Arn
                  - !GetAtt ResourceDraftedForDeletionEventHandlerDLQ.Arn
        - PolicyName: EventBridgeEvents
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - events:PutEvents
                  - events:PutRule
                Resource: !Ref EventBusArn
        - PolicyName: ReadSecrets
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - secretsmanager:GetResourcePolicy
                  - secretsmanager:GetSecretValue
                  - secretsmanager:DescribeSecret
                  - secretsmanager:ListSecretVersionIds
                Resource:
                  Fn::Sub: arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:${CustomerSecretsSecretName}*

  DataCiteUpdateDoiHandlerFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: datacite-update-doi-handler
      Handler: no.unit.nva.datacite.handlers.UpdateDoiEventHandler::handleRequest
      Role: !GetAtt LambdaRole.Arn
      Environment:
        Variables:
          EVENT_BUS: !Ref EventBusName
          AWC_ACCOUNT_ID: !Ref AWS::AccountId
          CUSTOMER_SECRETS_SECRET_NAME: !Ref CustomerSecretsSecretName
          CUSTOMER_SECRETS_SECRET_KEY: !Ref CustomerSecretsSecretKey
          DATACITE_REST_HOST: !Ref DataCiteRestHost
          DATACITE_MDS_HOST: !Ref DataCiteMdsHost
          DOI_HOST: !Ref DoiHost
      Events:
        EventBridgeEvent:
          Type: EventBridgeRule
          Properties:
            EventBusName: !Ref EventBusName
            Pattern:
              detail-type: [ "Lambda Function Invocation Result - Success" ]
              detail:
                responsePayload:
                  topic:
                    - PublicationService.Doi.UpdateRequest
                  doi:
                    - exists: true
      EventInvokeConfig:
        DestinationConfig:
          OnFailure:
            Type: SQS
            Destination: !GetAtt DataCiteDraftDoiHandlerDLQ.Arn

  ResourceDraftedForDeletion:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: datacite-delete-draft-doi-handler
      Handler: no.unit.nva.datacite.handlers.resource.ResourceDraftedForDeletionEventHandler::handleRequest
      MemorySize: 512
      Role: !GetAtt LambdaRole.Arn
      Environment:
        Variables:
          EVENT_BUS: !Ref EventBusName
          AWC_ACCOUNT_ID: !Ref AWS::AccountId
          CUSTOMER_SECRETS_SECRET_NAME: !Ref CustomerSecretsSecretName
          CUSTOMER_SECRETS_SECRET_KEY: !Ref CustomerSecretsSecretKey
          DATACITE_REST_HOST: !Ref DataCiteRestHost
          DATACITE_MDS_HOST: !Ref DataCiteMdsHost
          DOI_HOST: !Ref DoiHost
      Events:
        EventBridgeEvent:
          Type: EventBridgeRule
          Properties:
            EventBusName: !Ref EventBusName
            Pattern:
              detail-type: [ "Lambda Function Invocation Result - Success" ]
              detail:
                responsePayload:
                  topic:
                    - PublicationService.Resource.DraftForDeletion
                  hasDoi:
                    - true

  DataCiteReserveDraftDoiHandlerFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: datacite-draft-doi-handler
      Handler: no.unit.nva.datacite.handlers.ReserveDraftDoiHandler::handleRequest
      Role: !GetAtt LambdaRole.Arn
      Environment:
        Variables:
          AWC_ACCOUNT_ID: !Ref AWS::AccountId
          CUSTOMER_SECRETS_SECRET_NAME: !Ref CustomerSecretsSecretName
          CUSTOMER_SECRETS_SECRET_KEY: !Ref CustomerSecretsSecretKey
          DATACITE_REST_HOST: !Ref DataCiteRestHost
          DATACITE_MDS_HOST: !Ref DataCiteMdsHost
          DOI_HOST: !Ref DoiHost
          ALLOWED_ORIGIN: !Ref AllowedOrigins
      Events:
        GetEvent:
          Type: Api
          Properties:
            Path: /draft
            Method: post
            RestApiId: !Ref NvaDoiRegistrarClientApi

  DataCiteFindableDoiHandler:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: datacite-update-doi-handler
      Handler: no.unit.nva.datacite.handlers.FindableDoiHandler::handleRequest
      Role: !GetAtt LambdaRole.Arn
      Environment:
        Variables:
          EVENT_BUS: !Ref EventBusName
          AWC_ACCOUNT_ID: !Ref AWS::AccountId
          CUSTOMER_SECRETS_SECRET_NAME: !Ref CustomerSecretsSecretName
          CUSTOMER_SECRETS_SECRET_KEY: !Ref CustomerSecretsSecretKey
          DATACITE_REST_HOST: !Ref DataCiteRestHost
          DATACITE_MDS_HOST: !Ref DataCiteMdsHost
          DOI_HOST: !Ref DoiHost
          ALLOWED_ORIGIN: !Ref AllowedOrigins
      Events:
        GetEvent:
          Type: Api
          Properties:
            Path: /findable
            Method: post
            RestApiId: !Ref NvaDoiRegistrarClientApi

  DataCiteDeleteDraftDoiHandler:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: datacite-delete-draft-doi-handler
      Handler: no.unit.nva.datacite.handlers.doi.DeleteDraftDoiHandler::handleRequest
      Role: !GetAtt LambdaRole.Arn
      Environment:
        Variables:
          EVENT_BUS: !Ref EventBusName
          AWC_ACCOUNT_ID: !Ref AWS::AccountId
          CUSTOMER_SECRETS_SECRET_NAME: !Ref CustomerSecretsSecretName
          CUSTOMER_SECRETS_SECRET_KEY: !Ref CustomerSecretsSecretKey
          DATACITE_REST_HOST: !Ref DataCiteRestHost
          DATACITE_MDS_HOST: !Ref DataCiteMdsHost
          DOI_HOST: !Ref DoiHost
          ALLOWED_ORIGIN: !Ref AllowedOrigins
      Events:
        GetEvent:
          Type: Api
          Properties:
            Path: /draft/{doiPrefix}/{doiSuffix}
            Method: delete
            RestApiId: !Ref NvaDoiRegistrarClientApi


  NvaDoiRegistrarClientApi:
    Type: AWS::Serverless::Api
    Properties:
      AccessLogSetting:
        DestinationArn: !GetAtt ApiAccessLogGroup.Arn
        Format: '{ "apiId": "$context.apiId", "requestId": "$context.requestId", "requestTime": "$context.requestTime", "requestTimeEpoch": "$context.requestTimeEpoch", "httpMethod": "$context.httpMethod", "path": "$context.path", "status": "$context.status",  "error.message": "$context.error.message" }'
      StageName: Prod
      EndpointConfiguration: REGIONAL
      DefinitionBody:
        'Fn::Transform':
          Name: AWS::Include
          Parameters:
            Location: ./docs/openapi.yaml

  #===========================BasePathMappings========================================================#

  NvaDoiRegistrarClientBasePathMapping:
    Type: AWS::ApiGateway::BasePathMapping
    Properties:
      BasePath: !If
        - WithSuffix
        - !Sub ${CustomDomainBasePath}-${Suffix}
        - !Sub ${CustomDomainBasePath}
      DomainName: !Ref ApiDomain
      RestApiId: !Ref NvaDoiRegistrarClientApi
      Stage: !Ref NvaDoiRegistrarClientApi.Stage

  DataCiteFindableDoiHandlerDLQ:
    Type: "AWS::SQS::Queue"

  DataCiteDraftDoiHandlerDLQ:
    Type: "AWS::SQS::Queue"

  DataCiteDeleteDraftDoiHandlerDLQ:
    Type: "AWS::SQS::Queue"

  ResourceDraftedForDeletionEventHandlerDLQ:
    Type: "AWS::SQS::Queue"

  #============================= Alarms =========================================================

  DataCiteFindableDoiHandlerDLQAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: Doi-registrar creating findable doi failed
      AlarmDescription: If this alarm is triggered, then check sqs messages on DataCiteFindableDoiHandlerDLQ. Creating findable DOI has failed.
      MetricName: ApproximateNumberOfMessagesVisible
      Namespace: AWS/SQS
      Statistic: Sum
      Dimensions:
        - Name: QueueName
          Value: !GetAtt DataCiteFindableDoiHandlerDLQ.QueueName
      Period: 300
      EvaluationPeriods: 1
      Threshold: 1
      ComparisonOperator: GreaterThanOrEqualToThreshold
      AlarmActions:
        - !Ref SlackSnsArn

  DataCiteDraftDoiHandlerDLQAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: Doi-registrar creating draft doi failed
      AlarmDescription: If this alarm is triggered, then check sqs messages on DataCiteDraftDoiHandlerDLQ. Creating draft DOI has failed.
      MetricName: ApproximateNumberOfMessagesVisible
      Namespace: AWS/SQS
      Statistic: Sum
      Dimensions:
        - Name: QueueName
          Value: !GetAtt DataCiteDraftDoiHandlerDLQ.QueueName
      Period: 300
      EvaluationPeriods: 1
      Threshold: 1
      ComparisonOperator: GreaterThanOrEqualToThreshold
      AlarmActions:
        - !Ref SlackSnsArn

  DataCiteDeleteDraftDoiHandlerDLQAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: Doi-registrar deleting draft doi failed
      AlarmDescription: If this alarm is triggered, then check sqs messages on DataCiteDeleteDraftDoiHandlerDLQ. Deleting draft DOI has failed.
      MetricName: ApproximateNumberOfMessagesVisible
      Namespace: AWS/SQS
      Statistic: Sum
      Dimensions:
        - Name: QueueName
          Value: !GetAtt DataCiteDeleteDraftDoiHandlerDLQ.QueueName
      Period: 300
      EvaluationPeriods: 1
      Threshold: 1
      ComparisonOperator: GreaterThanOrEqualToThreshold
      AlarmActions:
        - !Ref SlackSnsArn

  ResourceDraftedForDeletionEventHandlerDLQAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: AWS/SQS ApproximateNumberOfMessagesVisible QueueName=ResourceDraftedForDeletionEventHandlerDLQ
      MetricName: ApproximateNumberOfMessagesVisible
      Namespace: AWS/SQS
      Statistic: Sum
      Dimensions:
        - Name: QueueName
          Value: !GetAtt ResourceDraftedForDeletionEventHandlerDLQ.QueueName
      Period: 300
      EvaluationPeriods: 1
      Threshold: 1
      ComparisonOperator: GreaterThanOrEqualToThreshold
      AlarmActions:
        - !Ref SlackSnsArn
